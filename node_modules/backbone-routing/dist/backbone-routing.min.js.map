{"version":3,"file":"backbone-routing.js","sources":["backbone-routing.js","/source/backbone-routing.js"],"names":["global","factory","exports","module","require","define","amd","Backbone","Routing","Metal","this","CancellationError","Error","extend","name","Route","Class","enter","args","undefined","arguments","_isEntering","trigger","apply","concat","Promise","resolve","then","_this","_isCancelled","reject","fetch","render","err","exit","cancel","_isExiting","_this2","destroy","stopListening","_this3","once","isEntering","isExiting","isCancelled","Router","prototype","constructor","listenTo","history","_onHistoryRoute","_super","isActive","_isActive","execute","callback","wasInactive","_this4","_execute","_prevRoute","route","_this5","router","backbone_routing"],"mappings":"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","sourceRoot":"/source/","sourcesContent":["(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('backbone'), require('backbone-metal')) :\n  typeof define === 'function' && define.amd ? define(['backbone', 'backbone-metal'], factory) :\n  global.Backbone.Routing = factory(global.Backbone, global.Metal)\n}(this, function (Backbone, Metal) { 'use strict';\n\n  const CancellationError = Metal.Error.extend({\n    name: 'CancellationError'\n  });\n\n  /**\n   * @public\n   * @class Route\n   */\n  const Route = Metal.Class.extend({\n\n    /**\n     * @public\n     * @method enter\n     * @returns {Promise}\n     * @param {...*} [args=[]]\n     */\n    enter(args = []) {\n      this._isEntering = true;\n      this.trigger('before:enter before:fetch', this, ...args);\n\n      return Promise.resolve()\n        .then(() => {\n          if (this._isCancelled) {\n            return Promise.reject(new CancellationError());\n          }\n          return this.fetch(...args);\n        })\n        .then(() => this.trigger('fetch before:render', this, ...args))\n        .then(() => {\n          if (this._isCancelled) {\n            return Promise.reject(new CancellationError());\n          }\n          return this.render(...args);\n        })\n        .then(() => {\n          this._isEntering = false;\n          this.trigger('render enter', this, ...args);\n        })\n        .catch(err => {\n          this._isEntering = false;\n          if (err instanceof CancellationError) {\n            this.trigger('cancel', this);\n          } else {\n            this.trigger('error error:enter', this, err);\n            throw err;\n          }\n        });\n    },\n\n    /**\n     * @public\n     * @method exit\n     * @returns {Promise}\n     */\n    exit() {\n      if (this._isEntering) {\n        this.cancel();\n      }\n      this._isExiting = true;\n      this.trigger('before:exit before:destroy', this);\n\n      return Promise.resolve()\n        .then(() => this.destroy())\n        .then(() => {\n          this._isExiting = false;\n          this.trigger('destroy exit', this);\n          this.stopListening();\n        })\n        .catch(err => {\n          this._isExiting = false;\n          this.trigger('error error:exit', this, err);\n          this.stopListening();\n          throw err;\n        });\n    },\n\n    /**\n     * @public\n     * @method cancel\n     * @returns {Promise}\n     */\n    cancel() {\n      if (!this._isEntering) {\n        return;\n      }\n      this.trigger('before:cancel', this);\n      this._isCancelled = true;\n      return new Promise((resolve, reject) => {\n        this.once('cancel', resolve);\n        this.once('enter error', reject);\n      });\n    },\n\n    /**\n     * @public\n     * @method isEntering\n     * @returns {Boolean}\n     */\n    isEntering() {\n      return !!this._isEntering;\n    },\n\n    /**\n     * @public\n     * @method isExiting\n     * @returns {Boolean}\n     */\n    isExiting() {\n      return !!this._isExiting;\n    },\n\n    /**\n     * @public\n     * @method isCancelled\n     * @returns {Boolean}\n     */\n    isCancelled() {\n      return !!this._isCancelled;\n    },\n\n    /**\n     * @public\n     * @abstract\n     * @method fetch\n     * @param {...*} [args=[]]\n     */\n    fetch() {},\n\n    /**\n     * @public\n     * @abstract\n     * @method render\n     * @param {...*} [args=[]]\n     */\n    render() {},\n\n    /**\n     * @public\n     * @abstract\n     * @method destroy\n     */\n    destroy() {}\n  });\n\n  /**\n   * @public\n   * @class Router\n   */\n  const Router = Metal.Class.extend(Backbone.Router.prototype, Backbone.Router).extend({\n    constructor() {\n      this.listenTo(Backbone.history, 'route', this._onHistoryRoute);\n      this._super(...arguments);\n    },\n\n    /**\n     * @public\n     * @method isActive\n     * @returns {Boolean}\n     */\n    isActive() {\n      return !!this._isActive;\n    },\n\n    /**\n     * @public\n     * @method execute\n     * @param {Function} callback\n     * @param {Array} [args]\n     */\n    execute(callback, args) {\n      let wasInactive = !this._isActive;\n      if (wasInactive) {\n        this.trigger('before:enter', this);\n      }\n\n      this.trigger('before:route', this);\n\n      return Promise.resolve().then(() => {\n        return this._execute(callback, args);\n      }).then(() => {\n        this.trigger('route', this);\n\n        if (wasInactive) {\n          this.trigger('enter', this);\n        }\n      }).catch(err => {\n        this.trigger('error', this, err);\n        Backbone.history.trigger('error', this, err);\n        throw err;\n      });\n    },\n\n    /**\n     * @public\n     * @method execute\n     * @param {Function} callback\n     * @param {Array} [args]\n     * @returns {Promise}\n     */\n    _execute(callback, args) {\n      return Promise.resolve().then(() => {\n        if (Router._prevRoute instanceof Route) {\n          return Router._prevRoute.exit();\n        }\n      }).then(() => {\n        let route = Router._prevRoute = callback.apply(this, args);\n        if (route instanceof Route) {\n          route.router = this;\n          return route.enter(args);\n        }\n      });\n    },\n\n    /**\n     * @private\n     * @method _onHistoryRoute\n     * @param {Router} router\n     */\n    _onHistoryRoute(router) {\n      this._isActive = (router === this);\n    }\n  }, {\n\n    /**\n     * @private\n     * @member _prevRoute\n     */\n    _prevRoute: null\n  });\n\n  var backbone_routing = {Route, Router, CancellationError};\n\n  return backbone_routing;\n\n}));\n","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('backbone'), require('backbone-metal')) :\n  typeof define === 'function' && define.amd ? define(['backbone', 'backbone-metal'], factory) :\n  global.Backbone.Routing = factory(global.Backbone, global.Metal)\n}(this, function (Backbone, Metal) { 'use strict';\n\n  const CancellationError = Metal.Error.extend({\n    name: 'CancellationError'\n  });\n\n  /**\n   * @public\n   * @class Route\n   */\n  const Route = Metal.Class.extend({\n\n    /**\n     * @public\n     * @method enter\n     * @returns {Promise}\n     * @param {...*} [args=[]]\n     */\n    enter(args = []) {\n      this._isEntering = true;\n      this.trigger('before:enter before:fetch', this, ...args);\n\n      return Promise.resolve()\n        .then(() => {\n          if (this._isCancelled) {\n            return Promise.reject(new CancellationError());\n          }\n          return this.fetch(...args);\n        })\n        .then(() => this.trigger('fetch before:render', this, ...args))\n        .then(() => {\n          if (this._isCancelled) {\n            return Promise.reject(new CancellationError());\n          }\n          return this.render(...args);\n        })\n        .then(() => {\n          this._isEntering = false;\n          this.trigger('render enter', this, ...args);\n        })\n        .catch(err => {\n          this._isEntering = false;\n          if (err instanceof CancellationError) {\n            this.trigger('cancel', this);\n          } else {\n            this.trigger('error error:enter', this, err);\n            throw err;\n          }\n        });\n    },\n\n    /**\n     * @public\n     * @method exit\n     * @returns {Promise}\n     */\n    exit() {\n      if (this._isEntering) {\n        this.cancel();\n      }\n      this._isExiting = true;\n      this.trigger('before:exit before:destroy', this);\n\n      return Promise.resolve()\n        .then(() => this.destroy())\n        .then(() => {\n          this._isExiting = false;\n          this.trigger('destroy exit', this);\n          this.stopListening();\n        })\n        .catch(err => {\n          this._isExiting = false;\n          this.trigger('error error:exit', this, err);\n          this.stopListening();\n          throw err;\n        });\n    },\n\n    /**\n     * @public\n     * @method cancel\n     * @returns {Promise}\n     */\n    cancel() {\n      if (!this._isEntering) {\n        return;\n      }\n      this.trigger('before:cancel', this);\n      this._isCancelled = true;\n      return new Promise((resolve, reject) => {\n        this.once('cancel', resolve);\n        this.once('enter error', reject);\n      });\n    },\n\n    /**\n     * @public\n     * @method isEntering\n     * @returns {Boolean}\n     */\n    isEntering() {\n      return !!this._isEntering;\n    },\n\n    /**\n     * @public\n     * @method isExiting\n     * @returns {Boolean}\n     */\n    isExiting() {\n      return !!this._isExiting;\n    },\n\n    /**\n     * @public\n     * @method isCancelled\n     * @returns {Boolean}\n     */\n    isCancelled() {\n      return !!this._isCancelled;\n    },\n\n    /**\n     * @public\n     * @abstract\n     * @method fetch\n     * @param {...*} [args=[]]\n     */\n    fetch() {},\n\n    /**\n     * @public\n     * @abstract\n     * @method render\n     * @param {...*} [args=[]]\n     */\n    render() {},\n\n    /**\n     * @public\n     * @abstract\n     * @method destroy\n     */\n    destroy() {}\n  });\n\n  /**\n   * @public\n   * @class Router\n   */\n  const Router = Metal.Class.extend(Backbone.Router.prototype, Backbone.Router).extend({\n    constructor() {\n      this.listenTo(Backbone.history, 'route', this._onHistoryRoute);\n      this._super(...arguments);\n    },\n\n    /**\n     * @public\n     * @method isActive\n     * @returns {Boolean}\n     */\n    isActive() {\n      return !!this._isActive;\n    },\n\n    /**\n     * @public\n     * @method execute\n     * @param {Function} callback\n     * @param {Array} [args]\n     */\n    execute(callback, args) {\n      let wasInactive = !this._isActive;\n      if (wasInactive) {\n        this.trigger('before:enter', this);\n      }\n\n      this.trigger('before:route', this);\n\n      return Promise.resolve().then(() => {\n        return this._execute(callback, args);\n      }).then(() => {\n        this.trigger('route', this);\n\n        if (wasInactive) {\n          this.trigger('enter', this);\n        }\n      }).catch(err => {\n        this.trigger('error', this, err);\n        Backbone.history.trigger('error', this, err);\n        throw err;\n      });\n    },\n\n    /**\n     * @public\n     * @method execute\n     * @param {Function} callback\n     * @param {Array} [args]\n     * @returns {Promise}\n     */\n    _execute(callback, args) {\n      return Promise.resolve().then(() => {\n        if (Router._prevRoute instanceof Route) {\n          return Router._prevRoute.exit();\n        }\n      }).then(() => {\n        let route = Router._prevRoute = callback.apply(this, args);\n        if (route instanceof Route) {\n          route.router = this;\n          return route.enter(args);\n        }\n      });\n    },\n\n    /**\n     * @private\n     * @method _onHistoryRoute\n     * @param {Router} router\n     */\n    _onHistoryRoute(router) {\n      this._isActive = (router === this);\n    }\n  }, {\n\n    /**\n     * @private\n     * @member _prevRoute\n     */\n    _prevRoute: null\n  });\n\n  var backbone_routing = {Route, Router, CancellationError};\n\n  return backbone_routing;\n\n}));\n"]}