{"version":3,"file":"backbone-service-modals.js","sources":["backbone-service-modals.js","/source/backbone-service-modals.js"],"names":["global","factory","exports","module","require","define","amd","ModalService","Service","Backbone","_","PromisePolyfill","this","ES6Promise","Promise","backbone_service_modals","extend","requests","open","close","alert","confirm","prompt","constructor","views","listenTo","history","_this","fragment","_super","apply","arguments","view","options","previousView","undefined","resolve","then","_this2","trigger","_isOpen","last","push","render","animateSwap","animateIn","_this3","map","without","animateOut","remove","all","reject","_this4","AlertView","promise","on","_this5","ConfirmView","result","cancel","_this6","PromptView","submit","text","isOpen"],"mappings":"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","sourceRoot":"/source/","sourcesContent":["(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('backbone.service'), require('backbone'), require('underscore'), require('es6-promise')) :\n  typeof define === 'function' && define.amd ? define(['backbone.service', 'backbone', 'underscore', 'es6-promise'], factory) :\n  global.ModalService = factory(global.Service, global.Backbone, global._, global.PromisePolyfill)\n}(this, function (Service, Backbone, _, PromisePolyfill) { 'use strict';\n\n  const ES6Promise = PromisePolyfill.Promise;\n\n  /**\n   * @class ModalService\n   */\n  var backbone_service_modals = Service.extend({\n\n    /**\n     * @abstract\n     * @method requests\n     */\n    requests() {\n      return {\n        open    : 'open',\n        close   : 'close',\n        alert   : 'alert',\n        confirm : 'confirm',\n        prompt  : 'prompt',\n      };\n    },\n\n    /**\n     * @constructs ModalService\n     */\n    constructor() {\n      this.views = [];\n\n      this.listenTo(Backbone.history, 'route', () => {\n        if (this.fragment !== Backbone.history.fragment) {\n          this.fragment = null;\n          this.close();\n        }\n      });\n\n      this._super(...arguments);\n    },\n\n    /**\n     * @method open\n     * @param {Backbone.View} [view]\n     * @returns {Promise}\n     */\n    open(view, options) {\n      let previousView;\n      return ES6Promise.resolve().then(() => {\n        this.trigger('before:open', view, options);\n        this.fragment = Backbone.history.fragment;\n        this._isOpen = true;\n\n        previousView = _.last(this.views);\n        this.views.push(view);\n\n        return this.render(view, options);\n      }).then(() => {\n        if (previousView) {\n          return this.animateSwap(previousView, view, options);\n        } else {\n          return this.animateIn(view, options);\n        }\n      }).then(() => {\n        this.trigger('open', view, options);\n      });\n    },\n\n    /**\n     * @method close\n     * @param {Backbone.View} [view]\n     * @returns {Promise}\n     */\n    close(view, options) {\n      let previousView;\n      let views;\n\n      return ES6Promise.resolve().then(() => {\n        if (view) {\n          this.trigger('before:close', view, options);\n        } else {\n          _.map(this.views, view => this.trigger('before:close', view, options));\n        }\n\n        this._isOpen = false;\n\n        if (view) {\n          views = this.views = _.without(this.views, view);\n        } else {\n          views = this.views;\n          this.views = [];\n        }\n\n        previousView = _.last(views);\n\n        if (view && previousView) {\n          return this.animateSwap(view, previousView, options);\n        } else if (view) {\n          return this.animateOut(view, options);\n        } else if (previousView) {\n          return this.animateOut(previousView, options);\n        }\n      }).then(() => {\n        if (view) {\n          return this.remove(view, options);\n        } else {\n          return Promise.all(_.map(views, view => this.remove(view, options)));\n        }\n      }).then(() => {\n        if (view) {\n          this.trigger('close', view, options);\n        } else {\n          _.map(views, view => this.trigger('close', view, options));\n        }\n      });\n    },\n\n    /**\n     * @method alert\n     * @param {Object} [options]\n     * @returns {Promise}\n     */\n    alert(options) {\n      return new ES6Promise((resolve, reject) => {\n        let view = new this.AlertView(options);\n        let promise = this.open(view, options);\n\n        this.trigger('before:alert', view, options);\n\n        view.on('confirm cancel', () => {\n          promise\n            .then(() => this.close(view, options))\n            .then(() => this.trigger('alert', null, view, options))\n            .then(resolve, reject);\n        });\n      });\n    },\n\n    /**\n     * @method confirm\n     * @param {Object} [options]\n     * @returns {Promise}\n     */\n    confirm(options) {\n      return new ES6Promise((resolve, reject) => {\n        let view = new this.ConfirmView(options);\n        let promise = this.open(view, options);\n\n        this.trigger('before:confirm', view, options);\n\n        let close = result => {\n          promise\n            .then(() => this.close(view, options))\n            .then(() => this.trigger('confirm', result, view, options))\n            .then(() => resolve(result), reject);\n        };\n\n        view.on({\n          confirm: () => close(true),\n          cancel: () => close(false)\n        });\n      });\n    },\n\n    /**\n     * @method prompt\n     * @returns {Promise}\n     */\n    prompt(options) {\n      return new ES6Promise((resolve, reject) => {\n        let view = new this.PromptView(options);\n        let promise = this.open(view, options);\n\n        this.trigger('before:prompt', view, options);\n\n        let close = result => {\n          promise\n            .then(() => this.close(view, options))\n            .then(() => this.trigger('prompt', result, view, options))\n            .then(() => resolve(result), reject);\n        };\n\n        view.on({\n          submit: text => close(text),\n          cancel: () => close()\n        });\n      });\n    },\n\n    /**\n     * @method isOpen\n     * @returns {Boolean}\n     */\n    isOpen() {\n      return !!this._isOpen;\n    },\n\n    /**\n     * @abstract\n     * @method render\n     */\n    render() {},\n\n    /**\n     * @abstract\n     * @method remove\n     */\n    remove() {},\n\n    /**\n     * @abstract\n     * @method animateIn\n     */\n    animateIn() {},\n\n    /**\n     * @abstract\n     * @method animateSwap\n     */\n    animateSwap() {},\n\n    /**\n     * @abstract\n     * @method animateOut\n     */\n    animateOut() {},\n  });\n\n  return backbone_service_modals;\n\n}));\n","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('backbone.service'), require('backbone'), require('underscore'), require('es6-promise')) :\n  typeof define === 'function' && define.amd ? define(['backbone.service', 'backbone', 'underscore', 'es6-promise'], factory) :\n  global.ModalService = factory(global.Service, global.Backbone, global._, global.PromisePolyfill)\n}(this, function (Service, Backbone, _, PromisePolyfill) { 'use strict';\n\n  const ES6Promise = PromisePolyfill.Promise;\n\n  /**\n   * @class ModalService\n   */\n  var backbone_service_modals = Service.extend({\n\n    /**\n     * @abstract\n     * @method requests\n     */\n    requests() {\n      return {\n        open    : 'open',\n        close   : 'close',\n        alert   : 'alert',\n        confirm : 'confirm',\n        prompt  : 'prompt',\n      };\n    },\n\n    /**\n     * @constructs ModalService\n     */\n    constructor() {\n      this.views = [];\n\n      this.listenTo(Backbone.history, 'route', () => {\n        if (this.fragment !== Backbone.history.fragment) {\n          this.fragment = null;\n          this.close();\n        }\n      });\n\n      this._super(...arguments);\n    },\n\n    /**\n     * @method open\n     * @param {Backbone.View} [view]\n     * @returns {Promise}\n     */\n    open(view, options) {\n      let previousView;\n      return ES6Promise.resolve().then(() => {\n        this.trigger('before:open', view, options);\n        this.fragment = Backbone.history.fragment;\n        this._isOpen = true;\n\n        previousView = _.last(this.views);\n        this.views.push(view);\n\n        return this.render(view, options);\n      }).then(() => {\n        if (previousView) {\n          return this.animateSwap(previousView, view, options);\n        } else {\n          return this.animateIn(view, options);\n        }\n      }).then(() => {\n        this.trigger('open', view, options);\n      });\n    },\n\n    /**\n     * @method close\n     * @param {Backbone.View} [view]\n     * @returns {Promise}\n     */\n    close(view, options) {\n      let previousView;\n      let views;\n\n      return ES6Promise.resolve().then(() => {\n        if (view) {\n          this.trigger('before:close', view, options);\n        } else {\n          _.map(this.views, view => this.trigger('before:close', view, options));\n        }\n\n        this._isOpen = false;\n\n        if (view) {\n          views = this.views = _.without(this.views, view);\n        } else {\n          views = this.views;\n          this.views = [];\n        }\n\n        previousView = _.last(views);\n\n        if (view && previousView) {\n          return this.animateSwap(view, previousView, options);\n        } else if (view) {\n          return this.animateOut(view, options);\n        } else if (previousView) {\n          return this.animateOut(previousView, options);\n        }\n      }).then(() => {\n        if (view) {\n          return this.remove(view, options);\n        } else {\n          return Promise.all(_.map(views, view => this.remove(view, options)));\n        }\n      }).then(() => {\n        if (view) {\n          this.trigger('close', view, options);\n        } else {\n          _.map(views, view => this.trigger('close', view, options));\n        }\n      });\n    },\n\n    /**\n     * @method alert\n     * @param {Object} [options]\n     * @returns {Promise}\n     */\n    alert(options) {\n      return new ES6Promise((resolve, reject) => {\n        let view = new this.AlertView(options);\n        let promise = this.open(view, options);\n\n        this.trigger('before:alert', view, options);\n\n        view.on('confirm cancel', () => {\n          promise\n            .then(() => this.close(view, options))\n            .then(() => this.trigger('alert', null, view, options))\n            .then(resolve, reject);\n        });\n      });\n    },\n\n    /**\n     * @method confirm\n     * @param {Object} [options]\n     * @returns {Promise}\n     */\n    confirm(options) {\n      return new ES6Promise((resolve, reject) => {\n        let view = new this.ConfirmView(options);\n        let promise = this.open(view, options);\n\n        this.trigger('before:confirm', view, options);\n\n        let close = result => {\n          promise\n            .then(() => this.close(view, options))\n            .then(() => this.trigger('confirm', result, view, options))\n            .then(() => resolve(result), reject);\n        };\n\n        view.on({\n          confirm: () => close(true),\n          cancel: () => close(false)\n        });\n      });\n    },\n\n    /**\n     * @method prompt\n     * @returns {Promise}\n     */\n    prompt(options) {\n      return new ES6Promise((resolve, reject) => {\n        let view = new this.PromptView(options);\n        let promise = this.open(view, options);\n\n        this.trigger('before:prompt', view, options);\n\n        let close = result => {\n          promise\n            .then(() => this.close(view, options))\n            .then(() => this.trigger('prompt', result, view, options))\n            .then(() => resolve(result), reject);\n        };\n\n        view.on({\n          submit: text => close(text),\n          cancel: () => close()\n        });\n      });\n    },\n\n    /**\n     * @method isOpen\n     * @returns {Boolean}\n     */\n    isOpen() {\n      return !!this._isOpen;\n    },\n\n    /**\n     * @abstract\n     * @method render\n     */\n    render() {},\n\n    /**\n     * @abstract\n     * @method remove\n     */\n    remove() {},\n\n    /**\n     * @abstract\n     * @method animateIn\n     */\n    animateIn() {},\n\n    /**\n     * @abstract\n     * @method animateSwap\n     */\n    animateSwap() {},\n\n    /**\n     * @abstract\n     * @method animateOut\n     */\n    animateOut() {},\n  });\n\n  return backbone_service_modals;\n\n}));\n"]}