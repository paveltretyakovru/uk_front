{"version":3,"file":"backbone.service.js","sources":["backbone.service.js","/source/backbone.service.js"],"names":["global","factory","exports","module","require","define","amd","Backbone","Service","classify","normalizeHash","Radio","_","PromisePolyfill","this","resolved","Promise","resolve","Channel","backbone_service","extend","constructor","start","once","then","_this","requests","each","val","key","reply","args","Array","_len","_key","arguments","apply","err","onError","_super","setup"],"mappings":"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","sourceRoot":"/source/","sourcesContent":["(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('backbone-metal-classify'), require('backbone-normalize-hash'), require('backbone.radio'), require('underscore'), require('es6-promise')) :\n  typeof define === 'function' && define.amd ? define(['backbone-metal-classify', 'backbone-normalize-hash', 'backbone.radio', 'underscore', 'es6-promise'], factory) :\n  global.Backbone.Service = factory(global.classify, global.normalizeHash, global.Radio, global._, global.PromisePolyfill)\n}(this, function (classify, normalizeHash, Radio, _, PromisePolyfill) { 'use strict';\n\n  const resolved = PromisePolyfill.Promise.resolve();\n\n  Radio.Channel = classify(Radio.Channel);\n\n  /**\n   * @class Service\n   */\n  var backbone_service = Radio.Channel.extend({\n    /**\n     * @constructs Service\n     */\n    constructor() {\n      let start = _.once(() => resolved.then(() => this.start()));\n      let requests = normalizeHash(this, 'requests');\n\n      _.each(requests, (val, key) => {\n        this.reply(key, (...args) => {\n          return start()\n            .then(() => this[key](...args))\n            .catch(err => {\n              this.onError(err);\n              throw err;\n            });\n        });\n      });\n\n      this._super(...arguments);\n    },\n\n    /**\n     * @abstract\n     * @method setup\n     */\n    setup() {},\n\n    /**\n     * @abstract\n     * @method start\n     */\n    start() {},\n\n    /**\n     * @abstract\n     * @method onError\n     */\n    onError() {}\n  });\n\n  return backbone_service;\n\n}));\n","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('backbone-metal-classify'), require('backbone-normalize-hash'), require('backbone.radio'), require('underscore'), require('es6-promise')) :\n  typeof define === 'function' && define.amd ? define(['backbone-metal-classify', 'backbone-normalize-hash', 'backbone.radio', 'underscore', 'es6-promise'], factory) :\n  global.Backbone.Service = factory(global.classify, global.normalizeHash, global.Radio, global._, global.PromisePolyfill)\n}(this, function (classify, normalizeHash, Radio, _, PromisePolyfill) { 'use strict';\n\n  const resolved = PromisePolyfill.Promise.resolve();\n\n  Radio.Channel = classify(Radio.Channel);\n\n  /**\n   * @class Service\n   */\n  var backbone_service = Radio.Channel.extend({\n    /**\n     * @constructs Service\n     */\n    constructor() {\n      let start = _.once(() => resolved.then(() => this.start()));\n      let requests = normalizeHash(this, 'requests');\n\n      _.each(requests, (val, key) => {\n        this.reply(key, (...args) => {\n          return start()\n            .then(() => this[key](...args))\n            .catch(err => {\n              this.onError(err);\n              throw err;\n            });\n        });\n      });\n\n      this._super(...arguments);\n    },\n\n    /**\n     * @abstract\n     * @method setup\n     */\n    setup() {},\n\n    /**\n     * @abstract\n     * @method start\n     */\n    start() {},\n\n    /**\n     * @abstract\n     * @method onError\n     */\n    onError() {}\n  });\n\n  return backbone_service;\n\n}));\n"]}